Name: Connect - Establish a connection between two nodes or lists of nodes.

Synopsis:

source target	 Connect 
source target	 syn_model Connect 
source target weight delay	 Connect 
source target weight delay syn_model Connect 
source target params	 Connect 
source target params	 syn_model Connect 
sources targets	 Connect 
sources targets conn_rule	 Connect 
sources targets conn_spec	 Connect 
sources targets conn_rule syn_model  Connect 
sources targets conn_spec syn_model  Connect 
sources targets conn_rule syn_spec   Connect 
sources targets conn_spec syn_spec   Connect


Description:

Connects sources to targets according to the given connectivity 
specification conn_spec. Some connection rules impose requirements. 
E.g. /one_to_one requires that sources and targets have the same 
number of elements. Others may have additional parameters, 
e.g. connection probability /p for /pairwise_binomial. 
The variants with two global ids as arguments implicitly connect 
the two neurons using the all_to_all rule. If given, weight, delay, 
syn_model, and params are used for the connection. 
The variants with only literal arguments /conn_rule or /syn_model 
are shorthand for the corresponding calls with a connectivity or 
synapse specification dictionaries as explained in the Options 
section.  The literals are expanded to << /rule /conn_rule >> and 
<< /model /syn_model >>, respectively. 
Parameters for connectivity rules must have fixed values. 
Parameters for synapses may be fixed single values and random deviate 
specifications.


Parameters:

source	 integer 	- the GID of the source 
target	 integer 	- the GID of the target 
weight	 double  	- the weight of the connection 
delay	 double  	- the delay of the connection 
params	 dict		- dictionary with synapse parameters 
sources   array/intvector/gidcollection 	- the GIDs of the sources 
targets   array/intvector/gidcollection 	- the GIDs of the targets 
syn_model  literal 	- the name of the synapse model, see synapsedict 
syn_spec   dict		- dictionary with synapse model specification (see Options) 
conn_rule  literal 	- the name of the connection rule, see connruledict 
conn_spec  dict		- dictionary with connectivity specification (see Options)


Options:

/conn_spec	- dictionary with connectivity specification, must at least contain /rule 
The following options may be given for all connection rules; 
not all rules support all options and many rules add rule-specific options. 
autapses	 bool 	- allow self-connections (default: true) 
multapses	 bool 	- allow multiple connections between pairs 
of neurons (default: true) 
symmetric	 bool 	- also create connection in opposite direction to 
obtain symmetric connections (default: false) 
/syn_spec 	- dictionary with synapse specification, must at least contain /model


Author:

Hannah Bos, Hans Ekkehard Plesser, Jochen Martin Eppler


FirstVersion:

January 2014


SeeAlso:

synapsedict
connruledict
cvgidcollection

Source:

/home/christoph/nest-simulator-2.14.0-src/lib/sli/nest-init.sli