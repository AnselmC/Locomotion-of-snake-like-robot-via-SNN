Name: save - save interpreter state in a state dictionary

Synopsis:

save -> statedict true


Examples:

save and restore can be used to implement non-local jumps within procedures and even between procedures. 
A saved state defines a jump position to which the execution can return by calling restore for this state.


Description:

Experimental function to save the interpreter state into a state dictionary. 
The state can then be restored, using the command restore. 
After restore, execution will resume with the next command after 'save'. 
The boolean return value can be used to branch execution after saving or restoring the state.


Author:

Marc-Oliver Gewaltig


SeeAlso:

restore

Source:

/home/christoph/nest-simulator-2.14.0-src/lib/sli/sli-init.sli