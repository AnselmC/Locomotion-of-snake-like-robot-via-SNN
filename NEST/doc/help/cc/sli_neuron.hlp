Name: sli_neuron - neuron with SLI callback

Description:

The sli_neuron is a model whose state, update and calibration can be 
defined in SLI. 
The state of the neuron is a SLI dictionary which can be retrieved 
with GetStatus. The state should contain two procedures: 
1. /update 
2. /calibrate 
/calibrate is called before the simulation starts. It is used to 
pre-compute constants of the dynamics and to scale 
parameters to the temporal resolution.  A minimal 
implementation of calibrate is: 
/calibrate { GetResolution /h Set } def 
/update   is called during simulation and must propagate the node's 
state by one integration step h.  If /update decides that 
the node should spike, it must set the variable /spike to 
true. 
Both /calibrate and /update are called with the node's status 
dictionary on top of the dictionary stack.  This means that node 
variables override names in the systemdict or in the userdict. 
Moreover, all definitions are done in the node's statusdict and 
persist throughout the simulation. 
Errors. 
If an error occurs during the evaluation of /calibrate or /update, the 
errorneous neuron is skipped and update proceeds to the next node 
until the time-slice is finished. After the time-slice is finished, 
simulation terminates with an additional error message that issues the 
global id of the errorneous node. 
Errors are handled by the SLI standard errorhandler. In addition, the 
contents of the error dictionary is copied into the node's status 
dictionary, to allow debugging of the node.


Parameters:




Receives:

SpikeEvent, CurrentEvent, DataLoggingRequest


Sends:

SpikeEvent


Author:

Diesmann, Plesser, Gewaltig


FirstVersion:

January 2009


SeeAlso:

iaf_psc_delta
iaf_psc_exp
iaf_cond_exp
testsuite::test_sli_neuron

Source:

/home/christoph/nest-simulator-2.14.0-src/nest/sli_neuron.h